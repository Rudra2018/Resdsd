name: HEAVY Release Builder
on:
  workflow_dispatch: {}
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    env:
      DEBIAN_FRONTEND: noninteractive
      GOPATH: ${{ github.workspace }}/go
      PATH: ${{ github.workspace }}/go/bin:/usr/local/go/bin:/usr/bin:/bin:/usr/sbin:/sbin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Base APT packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ca-certificates curl wget unzip tar git build-essential pkg-config \
            libssl-dev ruby-full nmap sqlmap ffuf gobuster \
            tshark exiftool default-jre python3-venv

      # ---- Trivy (choose ONE of the two blocks) ----
      # A) Official installer (latest)
      # - name: Install Trivy
      #  run: |
      #    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
      #   | sudo sh -s -- -b /usr/local/bin
      #    trivy --version
      # B) Pinned version (uncomment and comment A if you prefer)
      #  - name: Install Trivy (pinned)
       #   run: |
        #  #   set -e
        #   VER="0.66.0"
        #   ARCH="Linux-64bit.tar.gz"
        #   URL="https://github.com/aquasecurity/trivy/releases/download/v${VER}/trivy_${VER}_${ARCH}"
        #   curl -fL "$URL" -o trivy.tgz
        #   sudo tar -zxvf trivy.tgz -C /usr/local/bin trivy
         #  trivy --version

      - name: Install Go-based tools
        run: |
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install github.com/projectdiscovery/naabu/v2/cmd/naabu@latest
          go install github.com/projectdiscovery/dnsx/cmd/dnsx@latest
          go install github.com/projectdiscovery/katana/cmd/katana@latest
          go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          go install github.com/tomnomnom/waybackurls@latest
          go install github.com/jaeles-project/uro/cmd/uro@latest
          go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest

      - name: Install WPScan, zsteg, volatility3, wafw00f
        run: |
          sudo gem install wpscan
          sudo gem install zsteg
          python3 -m pip install --user --upgrade pip
          python3 -m pip install --user volatility3 wafw00f

      - name: Update nuclei templates
        run: |
          nuclei -update-templates || true
          echo "templates at $HOME/.local/share/nuclei-templates"

      - name: Vendor heavy assets
        run: |
          set -e
          mkdir -p vendor/bin vendor/seclists vendor/nuclei-templates

          # Go binaries
          cp -a "$GOPATH/bin/"* vendor/bin/ || true

          # System/installed binaries
          for b in /usr/bin/sqlmap /usr/bin/ffuf /usr/bin/gobuster /usr/bin/tshark /usr/bin/nmap; do
            if [ -x "$b" ]; then cp "$b" vendor/bin/; fi
          done
          # Trivy
          if command -v trivy >/dev/null 2>&1; then sudo cp "$(command -v trivy)" vendor/bin/trivy; fi
          # WPScan & zsteg (gems)
          if command -v wpscan >/dev/null 2>&1; then ln -sf "$(command -v wpscan)" vendor/bin/wpscan; fi
          if command -v zsteg  >/dev/null 2>&1; then ln -sf "$(command -v zsteg)"  vendor/bin/zsteg;  fi
          # wafw00f / volatility3 (pip user)
          if command -v wafw00f >/dev/null 2>&1; then ln -sf "$(command -v wafw00f)" vendor/bin/wafw00f; elif [ -x "$HOME/.local/bin/wafw00f" ]; then ln -sf "$HOME/.local/bin/wafw00f" vendor/bin/wafw00f; fi
          if command -v volatility3 >/dev/null 2>&1; then ln -sf "$(command -v volatility3)" vendor/bin/volatility3; elif [ -x "$HOME/.local/bin/volatility3" ]; then ln -sf "$HOME/.local/bin/volatility3" vendor/bin/volatility3; fi

          # SecLists (git clone)
          git clone --depth=1 https://github.com/danielmiessler/SecLists.git vendor/seclists

          # nuclei templates
          if [ -d "$HOME/.local/share/nuclei-templates" ]; then
            cp -a "$HOME/.local/share/nuclei-templates" vendor/nuclei-templates
          fi

      - name: Compose heavy ZIP
        run: |
          NAME="3rd_EAI_HEAVY_FULL_$(date +%Y%m%d_%H%M%S).zip"
          zip -r "$NAME" . -x ".git/*" -x "vendor/*.zip"
          echo "ZIP_NAME=$NAME" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}

      - name: Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_NAME }}
